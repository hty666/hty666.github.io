{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"hty","url":"http://hty666.github.io"},"pages":[],"posts":[{"title":"HTTP包括","slug":"1","date":"2018-12-19T11:10:16.420Z","updated":"2018-12-19T11:10:16.422Z","comments":true,"path":"2018/12/19/1/","link":"","permalink":"http://hty666.github.io/2018/12/19/1/","excerpt":"","text":"HTTP 请求包括哪些部分请求报文(请求行/请求头/请求数据/空行) 请求行求方法字段、URL字段和HTTP协议版本例如：GET / HTTP/1.1 请求方法： GET、POST 请求头User-Agent：产生请求的浏览器类型。Accept：客户端可识别的内容类型列表。Host：主机地址 请求数据post方法中，会把数据以key value形式发送请求 空行发送回车符和换行符，通知服务器以下不再有请求头请求的格式1 动词 路径 协议/版本2 Key1: value12 Key2: value22 Key3: value32 Content-Type: application/x-www-form-urlencoded2 Host: www.baidu.com2 User-Agent: curl/7.54.034 要上传的数据请求最多包含四部分，最少包含三部分。（也就是说第四部分可以为空）第三部分永远都是一个回车（\\n）动词有 GET POST PUT PATCH DELETE HEAD OPTIONS 等这里的路径包括「查询参数」，但不包括「锚点」如果你没有写路径，那么路径默认为 /第 2 部分中的 Content-Type 标注了第 4 部分的格式 如何用Chrome开发者工具查看 HTTP 请求内容 打开 Network 地址栏输入网址 在 Network 点击，查看 request，点击「view source」 可以看到请求的前三部分了 如果有请求的第四部分，那么在 FormData 或 Payload 里面可以看到 HTTP 响应包括哪些部分响应报文(状态行、消息报头、响应正文) 状态行 消息报头 响应正文 响应的格式1 协议/版本号 状态码 状态解释2 Key1: value12 Key2: value22 Content-Length: 179312 Content-Type: text/html34 要下载的内容状态码要背，是服务器对浏览器说的话1xx 不常用2xx 表示成功3xx 表示滚吧4xx 表示你丫错了5xx 表示好吧，我错了状态解释没什么用第 2 部分中的 Content-Type 标注了第 4 部分的格式第 2 部分中的 Content-Type 遵循 MIME 规范 如何用Chrome开发者工具查看 HTTP 响应内容 打开 Network 输入网址 选中第一个响应 查看 Response Headers，点击「view source」 你会看到响应的前两部分 查看 Response 或者 Preview，你会看到响应的第 4 部分 如何使用 curl 命令curl命令是在命令行方式下工作，利用URL的语法进行数据的传输或者文件的传输。通过http代理服务器上传文件到FTP服务器等等，功能十分强大。 Curl执行GET/POST/PUT/DELETE操作 显示一次的http请求的通信过程 检查hosts文件 访问一个网页","categories":[],"tags":[]},{"title":"HTTP请求，响应，curl命令","slug":"HTTP包括哪些部分","date":"2018-12-19T10:52:27.354Z","updated":"2018-12-19T11:14:11.884Z","comments":true,"path":"2018/12/19/HTTP包括哪些部分/","link":"","permalink":"http://hty666.github.io/2018/12/19/HTTP包括哪些部分/","excerpt":"","text":"HTTP 请求包括哪些部分请求报文(请求行/请求头/请求数据/空行) 请求行求方法字段、URL字段和HTTP协议版本例如：GET / HTTP/1.1 请求方法： GET、POST 请求头User-Agent：产生请求的浏览器类型。Accept：客户端可识别的内容类型列表。Host：主机地址 请求数据post方法中，会把数据以key value形式发送请求 空行发送回车符和换行符，通知服务器以下不再有请求头请求的格式1 动词 路径 协议/版本2 Key1: value12 Key2: value22 Key3: value32 Content-Type: application/x-www-form-urlencoded2 Host: www.baidu.com2 User-Agent: curl/7.54.034 要上传的数据请求最多包含四部分，最少包含三部分。（也就是说第四部分可以为空）第三部分永远都是一个回车（\\n）动词有 GET POST PUT PATCH DELETE HEAD OPTIONS 等这里的路径包括「查询参数」，但不包括「锚点」如果你没有写路径，那么路径默认为 /第 2 部分中的 Content-Type 标注了第 4 部分的格式 如何用Chrome开发者工具查看 HTTP 请求内容 打开 Network 地址栏输入网址 在 Network 点击，查看 request，点击「view source」 可以看到请求的前三部分了 如果有请求的第四部分，那么在 FormData 或 Payload 里面可以看到 HTTP 响应包括哪些部分响应报文(状态行、消息报头、响应正文) 状态行 消息报头 响应正文 响应的格式1 协议/版本号 状态码 状态解释2 Key1: value12 Key2: value22 Content-Length: 179312 Content-Type: text/html34 要下载的内容状态码要背，是服务器对浏览器说的话1xx 不常用2xx 表示成功3xx 表示滚吧4xx 表示你丫错了5xx 表示好吧，我错了状态解释没什么用第 2 部分中的 Content-Type 标注了第 4 部分的格式第 2 部分中的 Content-Type 遵循 MIME 规范 如何用Chrome开发者工具查看 HTTP 响应内容 打开 Network 输入网址 选中第一个响应 查看 Response Headers，点击「view source」 你会看到响应的前两部分 查看 Response 或者 Preview，你会看到响应的第 4 部分 如何使用 curl 命令curl命令是在命令行方式下工作，利用URL的语法进行数据的传输或者文件的传输。通过http代理服务器上传文件到FTP服务器等等，功能十分强大。 Curl执行GET/POST/PUT/DELETE操作 显示一次的http请求的通信过程 检查hosts文件 访问一个网页","categories":[],"tags":[]},{"title":"关于HTML","slug":"关于HTML","date":"2018-12-19T10:27:00.695Z","updated":"2018-12-19T11:01:22.301Z","comments":true,"path":"2018/12/19/关于HTML/","link":"","permalink":"http://hty666.github.io/2018/12/19/关于HTML/","excerpt":"","text":"W3CWorld Wide Web Consortium (W3C)是主要的国际标准组织为万维网(缩写WWW或W3) 历史万维网联盟(W3C)成立蒂姆•伯纳斯-李之后他离开了欧洲核研究组织(欧洲核子研究中心在1994年10月)。 它成立于麻省理工学院的 计算机科学实验室(麻省理工学院/ LCS)的支持欧洲委员会和国防高级研究计划局(美国国防部高级研究计划局),曾开创了阿帕网,一个前辈的互联网。 组织试图促进行业成员之间的兼容性和一致性的采用新标准由W3C定义的。 不兼容的版本的HTML是由不同的供应商提供,导致网页是如何显示不一致。 该财团试图让这些供应商实现一套核心原则和组件选择的财团。 这本来是欧洲核子研究中心主办的欧洲分支W3C; 然而,欧洲核子研究中心希望关注粒子物理,而不是信息技术。 1995年4月,法国研究所计算机科学和自动化(法国)成为欧洲的W3C庆应义塾大学研究所香港证监会(克里斯)成为亚洲举办1996年9月。从1997年开始,W3C创造了世界各地的区域办事处。 截至2009年9月,有十八个世界办公室覆盖澳大利亚、比利时、荷兰、卢森堡国家(荷兰、卢森堡和比利时),巴西、中国、芬兰、德国、奥地利、希腊、香港、匈牙利、印度、以色列、意大利、韩国、摩洛哥、南非、西班牙、瑞典,截至2016年,英国和爱尔兰。 MDNMDN的使命很简单：提供给开发者们更轻易构建Web项目的信息。致力于记录互联网上的开源技术。 历史Mozilla 开发者网络（亦称作Mozilla 开发者中心（MDC）或 Devmo）在2005年年初启动。那时 Mozilla 基金会 从AOL 获得了许可协议，得以使用原创的 DevEdge 内容。DevEdge 内容的引入具有抛砖引玉之效，因此在那不久在社区志愿者的努力下它被迁移到了这个更易于更新与维护的wiki。 此后，这个项目不断发展，现在已经成为所有与关于 Mozilla 项目和开放网络技术的文档的核心一环。在2010年，该项目更名为Mozilla开发者网络（Mozilla Developer Network）。2011年，又添加了供web开发者分享与展示代码的 Demo Studio 与提供教程的 Learning 页面。（MDC 现在表示了”MDN文档中心（MDN Doc Center）”）现在，Mozilla开发者网络正向着成为供Web设计师、应用开发者、以及拓展、主题制作者们时常参考的资源的方向发展。 更多关于Mozilla的后世前身可在我们的十周年纪念庆页面查看,其中还有参与者发表的Ta对Mozilla的评价。 HTML所有标签列表根元素节Element Descriptionhtml 代表 HTML 或 XHTML 文档的根。其他所有元素必须是这个元素的子节点。 文档元数据节Element Descriptionhead 代表关于文档元数据的一个集合，包括脚本或样式表的链接或内容。title 定义文档的标题，将显示在浏览器的标题栏或标签页上。该元素只能包含文本，包含的标签不会被解释。base 定义页面上相对 URL 的基准 URL。link 用于链接外部的 CSS 到该文档。meta 定义其他 HTML 元素无法描述的元数据。style 用于内联 CSS。 脚本节Element Descriptionscript 定义一个内联脚本或链接到外部脚本。脚本语言是 JavaScript。noscript 定义当浏览器不支持脚本时显示的替代文字。template 这个元素在 HTML5 中加入 通过 JavaScript 在运行时实例化内容的容器。 章节节Element Descriptionbody代表 HTML 文档的内容。在文档中只能有一个 body 元素。section 这个元素在 HTML5 中加入 定义文档中的一个章节。nav 这个元素在 HTML5 中加入 定义只包含导航链接的章节。article 这个元素在 HTML5 中加入 定义可以独立于内容其余部分的完整独立内容块。aside 这个元素在 HTML5 中加入 定义和页面内容关联度较低的内容——如果被删除，剩下的内容仍然很合理。h1,h2,h3,h4,h5,h6 标题元素实现了六层文档标题，h1 是最大的标题，h6 是最小的标题。标题元素简要地描述章节的主题。header 这个元素在 HTML5 中加入 定义页面或章节的头部。它经常包含 logo、页面标题和导航性的目录。footer 这个元素在 HTML5 中加入 定义页面或章节的尾部。它经常包含版权信息、法律信息链接和反馈建议用的地址。address 定义包含联系信息的一个章节。main这个元素在 HTML5 中加入 定义文档中主要或重要的内容。 组织内容节Element Descriptionp定义一个段落。hr代表章节、文章或其他长内容中段落之间的分隔符。pre代表其内容已经预先排版过，格式应当保留 。blockquote 代表引用自其他来源的内容。ol定义一个有序列表。ul定义一个无序列表。li定义列表中的一个列表项。dl定义一个定义列表（一系列术语和其定义）。dt代表一个由下一个dd定义的术语。dd代表出现在它之前术语的定义。dfn代表一个术语包含在其最近祖先内容中的定义 。abbr代表省略 或缩写 ，其完整内容在 title 属性中。data 这个元素在 HTML5 中加入 关联一个内容的机器可读的等价形式 （该元素只在 WHATWG 版本的 HTML 标准中，不在 W3C 版本的 HTML5 标准中）。time 这个元素在 HTML5 中加入 代表日期 和时间 值；机器可读的等价形式通过 datetime 属性指定。code 代表计算机代码 。var 代表代码中的变量 。samp 代表程序或电脑的输出 。kbd 代表用户输入 ，一般从键盘输出，但也可以代表其他输入，如语音输入。sub,sup 分别代表下标 和上标 。i 代表一段不同性质 的文字，如技术术语、外文短语等。b 代表一段需要被关注 的文字。u 代表一段需要下划线呈现的文本注释，如标记出拼写错误的文字等。mark 这个元素在 HTML5 中加入 代表一段需要被高亮的引用 文字。ruby 这个元素在 HTML5 中加入 代表被ruby 注释 标记的文本，如中文汉字和它的拼音。rt 这个元素在 HTML5 中加入 代表ruby 注释 ，如中文拼音。rp 这个元素在 HTML5 中加入 代表 ruby 注释两边的额外插入文本 ，用于在不支持 ruby 注释显示的浏览器中提供友好的注释显示。bdi 这个元素在 HTML5 中加入 代表需要脱离 父元素文本方向的一段文本。它允许嵌入一段不同或未知文本方向格式的文本。bdo 指定子元素的文本方向 ，显式地覆盖默认的文本方向。span 代表一段没有特殊含义的文本，当其他语义元素都不适合文本时候可以使用该元素。br 代表换行 。wbr 这个元素在 HTML5 中加入 代表建议换行 (Word Break Opportunity) ，当文本太长需要换行时将会在此处添加换行符。 编辑节Element Descriptionins 定义增加 到文档的内容。del 定义从文档移除 的内容。 嵌入内容节Element Descriptionimg 代表一张图片 。iframe 代表一个内联的框架 。embed 这个元素在 HTML5 中加入 代表一个嵌入 的外部资源，如应用程序或交互内容。object 代表一个外部资源 ，如图片、HTML 子文档、插件等。param 代表 object 元素所指定的插件的参数 。video 这个元素在 HTML5 中加入 代表一段视频 及其视频文件和字幕，并提供了播放视频的用户界面。audio 这个元素在 HTML5 中加入 代表一段声音 ，或音频流 。source 这个元素在 HTML5 中加入 为video或audio这类媒体元素指定媒体源 。track 这个元素在 HTML5 中加入 为video或audio这类媒体元素指定文本轨道（字幕） 。canvas 这个元素在 HTML5 中加入 代表位图区域 ，可以通过脚本在它上面实时呈现图形，如图表、游戏绘图等。map 与 area 元素共同定义图像映射 区域。area 与 map 元素共同定义图像映射 区域。svg 这个元素在 HTML5 中加入 定义一个嵌入式矢量图 。math 这个元素在 HTML5 中加入 定义一段数学公式 。 表格节Element Descriptiontable 定义多维数据 。caption 代表表格的标题 。colgroup 代表表格中一组单列或多列 。col 代表表格中的列 。tbody 代表表格中一块具体数据 （表格主体）。thead 代表表格中一块列标签 （表头）。tfoot 代表表格中一块列摘要 （表尾）。tr 代表表格中的行 。td 代表表格中的单元格 。th 代表表格中的头部单元格 。 表单节Element Descriptionform 代表一个表单 ，由控件组成。fieldset 代表控件组 。legend 代表 fieldset 控件组的标题 。label 代表表单控件的标题 。input 代表允许用户编辑数据的数据区 （文本框、单选框、复选框等）。button 代表按钮 。select 代表下拉框 。datalist 这个元素在 HTML5 中加入 代表提供给其他控件的一组预定义选项 。optgroup 代表一个选项分组 。option 代表一个 select 元素或 datalist 元素中的一个选项textarea 代表多行文本框 。keygen 这个元素在 HTML5 中加入 代表一个密钥对生成器 控件。output 这个元素在 HTML5 中加入 代表计算值 。progress 这个元素在 HTML5 中加入 代表进度条 。meter 这个元素在 HTML5 中加入 代表滑动条 。 交互元素节Element Descriptiondetails 这个元素在 HTML5 中加入 代表一个用户可以(点击)获取额外信息或控件的小部件 。summary 这个元素在 HTML5 中加入 代表 details 元素的综述 或标题 。menuitem 这个元素在 HTML5 中加入 代表一个用户可以点击的菜单项。menu 这个元素在 HTML5 中加入 代表菜单。 什么是空标签没有闭合的标签称为空标签，如：br 和img 等。他们不存在成对的情况（我是这么理解，觉得的不对的请指正我。）反之具有成对性质的例如：div、form就不是空标签。在HTML中，在空标签上使用闭标签是无效的，例如：/br。这样的情况是无效的HTML。 什么是被代替标签代替标签指标签会被替代，例如img标签会被下载的图片替代。典型的可替换元素有 img、 object、 video 和 表单元素，如textarea、 input 。 某些元素只在一些特殊情况下表现为可替换元素，例如 audio 和 canvas","categories":[],"tags":[]},{"title":"git init，git add，git commit -v这三个命令的使用","slug":"git init，git add，git commit -v这三个命令的使用","date":"2018-12-19T08:01:57.488Z","updated":"2018-12-19T10:12:47.091Z","comments":true,"path":"2018/12/19/git init，git add，git commit -v这三个命令的使用/","link":"","permalink":"http://hty666.github.io/2018/12/19/git init，git add，git commit -v这三个命令的使用/","excerpt":"","text":"git init用法进入某个空的文件夹下，打开Git Bash命令窗口输入git init作用主要用来初始化一个空的git本地仓库。执行完上面的命令，当前目录下会自动生成.git隐藏文件夹，该隐藏文件夹就是git版本库 git init git add用法命令将文件内容添加到索引(将修改添加到暂存区)作用以准备为下一次提交分段的内容 git commit -vgit commit -v用法在git bush中输入git commit后会进入vim模式作用显示有哪些更改的退出的时候狂按ESC然后输入:q!（冒号也要输入) git commit-v","categories":[],"tags":[]},{"title":"ls cat mv touch4个命令的使用以及如何使用 explainshell.com 这个网站","slug":"ls cat mv touch4个命令的使用以及如何使用 explainshell.com 这个网站","date":"2018-12-19T07:57:40.050Z","updated":"2018-12-18T13:33:00.453Z","comments":true,"path":"2018/12/19/ls cat mv touch4个命令的使用以及如何使用 explainshell.com 这个网站/","link":"","permalink":"http://hty666.github.io/2018/12/19/ls cat mv touch4个命令的使用以及如何使用 explainshell.com 这个网站/","excerpt":"","text":"ls1$ ls：中文（罗列） 全拼（list） 显示当前下面的文件及文件夹 可搭配的指令ls -a 显示当前目录下的所有文件及文件夹包括隐藏的.和..等ls -al 显示当前目录下的所有文件及文件夹包括隐藏的.和..等并显示详细信息，详细信息包括大小，属组，创建时间ls -l //显示不隐藏的文件与文件夹的详细信息 More info: ls cat1$ cat: 中文（链接） 全拼（CATenate） 可以一次显示整个文件或从键盘创建一个文件或者将几个文件合并为一个文件 More info: cat mv1$ mv: 中文（移动/重命名） 全拼（move） 就是源路径/目标路径，移动节点 More info： mv touch1$ touch: 中文（触摸） 全拼（touch） 可以创建一个文件也可以更改一个文件的更新时间 More info: touch ExplainShell.com这个网站对于Linux用户来说每天都会写各种命令和脚本，那么你可以使用这个网站工具来查看命令式如何工作的,这样可以避免不必要的错误出现；也是一个很好的学习命令的方式ExplainShell.com （可能需要翻墙才能进去）","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-12-19T07:05:03.362Z","updated":"2018-12-19T07:05:03.366Z","comments":true,"path":"2018/12/19/hello-world/","link":"","permalink":"http://hty666.github.io/2018/12/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}